on: [push, pull_request]

name: CI

jobs:
  lint:
    name: Lint contents
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix-env -f ./nix/pkgs.nix -iA nodejs
      - run: cd content; npm install
      - run: cd content; npm run lint
  build:
    name: Build contents
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - uses: cachix/cachix-action@v16
        with:
          name: coord-e-com
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build
      # workaround for actions/upload-artifact#92
      - run: |
          mkdir dist
          cp -r result/* dist/
      - uses: actions/upload-artifact@v4
        with:
          name: site
          path: dist
  ormolu:
    name: Run Ormolu
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix-env -f ./nix/pkgs.nix -iA ormolu
      - run: ormolu --mode check $(find . -name '*.hs')
  hlint:
    name: Run HLint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix-env -f ./nix/pkgs.nix -iA hlint
      - run: hlint $(find . -name '*.hs')
  nixfmt:
    name: Run nixfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v31
      - run: nix-env -f ./nix/pkgs.nix -iA nixfmt
      - run: nixfmt --check $(find . -name '*.nix')
